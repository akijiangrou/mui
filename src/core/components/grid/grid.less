/* === Grid === */
@import './grid-vars.less';

@cols: 5, 10, 15, 20, 25, 30, 100/3, 35, 40, 45, 50, 55, 60, 65, 100 * (2/3), 70, 75, 80, 85, 90, 95,
  100;

.row {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  align-items: flex-start;
  --cbx-cols-per-row: 1;
  + .row {
    margin-top: var(--cbx-grid-row-gap);
  }
  > [class*='col-'],
  > .col {
    box-sizing: border-box;
    width: calc(
      (100% - var(--cbx-grid-gap) * (var(--cbx-cols-per-row) - 1)) / var(--cbx-cols-per-row)
    );
    &.resizable {
      position: relative;
    }
  }
  &.resizable {
    position: relative;
  }
  &.no-gap {
    --cbx-grid-gap: 0px;
    --cbx-grid-row-gap: 0px;
  }

  each(@cols, {
    @className: floor((@value));
    @n: (100 / @value);
    .col-@{className} {
      --cbx-cols-per-row: @n;
    }
  });
  each(@cols, {
    .col:nth-last-of-type(@{index}),
    .col:nth-last-of-type(@{index}) ~ .col {
      --cbx-cols-per-row: @index;
    }
  });

  @media (min-width: @breakpoints[xsmall]) {
    each(@cols, {
      @className: floor((@value));
      @n: (100 / @value);
      .xsmall-@{className} {
        --cbx-cols-per-row: @n;
      }
    });
    each(@cols, {
      .xsmall-auto:nth-last-of-type(@{index}),
      .xsmall-auto:nth-last-of-type(@{index}) ~ .xsmall-auto {
        --cbx-cols-per-row: @index;
      }
    });
  }
  @media (min-width: @breakpoints[small]) {
    each(@cols, {
      @className: floor((@value));
      @n: (100 / @value);
      .small-@{className} {
        --cbx-cols-per-row: @n;
      }
    });
    each(@cols, {
      .small-auto:nth-last-of-type(@{index}),
      .small-auto:nth-last-of-type(@{index}) ~ .small-auto {
        --cbx-cols-per-row: @index;
      }
    });
  }
  @media (min-width: @breakpoints[medium]) {
    each(@cols, {
      @className: floor((@value));
      @n: (100 / @value);
      .medium-@{className} {
        --cbx-cols-per-row: @n;
      }
    });
    each(@cols, {
      .medium-auto:nth-last-of-type(@{index}),
      .medium-auto:nth-last-of-type(@{index}) ~ .medium-auto {
        --cbx-cols-per-row: @index;
      }
    });
  }
  @media (min-width: @breakpoints[large]) {
    each(@cols, {
      @className: floor((@value));
      @n: (100 / @value);
      .large-@{className} {
        --cbx-cols-per-row: @n;
      }
    });
    each(@cols, {
      .large-auto:nth-last-of-type(@{index}),
      .large-auto:nth-last-of-type(@{index}) ~ .large-auto {
        --cbx-cols-per-row: @index;
      }
    });
  }
  @media (min-width: @breakpoints[xlarge]) {
    each(@cols, {
      @className: floor((@value));
      @n: (100 / @value);
      .xlarge-@{className} {
        --cbx-cols-per-row: @n;
      }
    });
    each(@cols, {
      .xlarge-auto:nth-last-of-type(@{index}),
      .xlarge-auto:nth-last-of-type(@{index}) ~ .xlarge-auto {
        --cbx-cols-per-row: @index;
      }
    });
  }
}
.row .resize-handler {
  position: absolute;
  user-select: none;
  z-index: 100;
  &:before {
    content: '';
    position: absolute;
  }
  &:after {
    content: '';
    position: absolute;
    border-radius: 4px;
    background: var(--cbx-grid-resize-handler-bg-color);
  }
}
.row > .resize-handler {
  width: 100%;
  height: var(--cbx-grid-row-gap);
  left: 0;
  top: 100%;
  cursor: row-resize;
  &:before {
    left: 0%;
    top: 50%;
    height: 12px;
    width: 100%;
    min-height: var(--cbx-grid-row-gap);
    transform: translateY(-50%);
  }
  &:after {
    height: 4px;
    margin-top: -2px;
    width: 80%;
    max-width: 20px;
    left: 50%;
    top: 50%;
    transform: translateX(-50%);
  }
}
[class*='col-'] > .resize-handler,
.col > .resize-handler {
  width: var(--cbx-grid-gap);
  left: 100%;
  top: 0;
  height: 100%;
  cursor: col-resize;
  &:before {
    left: 50%;
    top: 0;
    height: 100%;
    width: 12px;
    min-width: var(--cbx-grid-gap);
    transform: translateX(-50%);
  }
  &:after {
    width: 4px;
    margin-left: -2px;
    height: 80%;
    max-height: 20px;
    border-radius: 4px;
    left: 50%;
    top: 50%;
    transform: translateY(-50%);
  }
}
.row:last-child,
.row:last-of-type,
.row [class*='col-']:last-child,
.row [class*='col-']:last-of-type,
.row .col:last-child,
.row .col:last-of-type {
  > .resize-handler {
    display: none;
  }
}

.if-ios-theme({
  @import './grid-ios.less';
});
.if-md-theme({
  @import './grid-md.less';
});
.if-aurora-theme({
  @import './grid-aurora.less';
});
